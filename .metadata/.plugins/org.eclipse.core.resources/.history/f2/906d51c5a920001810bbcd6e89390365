import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedList;

import javafx.util.Pair;

public class BrinFirst {
	String ColumnName;

	LinkedList<Entity> FirstBrintuples ; // entity of Pair object , Dense page number
	ArrayList BrinPages;
	
	DenseTable Dense;
	int currentLine;
	public BrinFirst(DenseTable Dense){
		this.Dense=Dense;
		this.ColumnName=Dense.ColumnName;
		this.FirstBrintuples = new LinkedList<Entity>();
		this.BrinPages=new ArrayList<>();
		CreateFirstBrin();
		
	}
	public void CreateFirstBrin(){
		for(int i=0;i<this.Dense.denses.size();i++){
			DenseIndex current=this.Dense.denses.get(i);
			Entity First=(Entity)current.Densetuples.getFirst();
			Entity Last=(Entity)current.Densetuples.getLast();
			Pair<Entity,Entity> Entities=new Pair<Entity,Entity> (First,Last);
			Entity toInsert=new Entity(Entities,i,-1);
			 FirstBrintuples.add(toInsert);
			 currentLine++;
			
			 if(check()){
				 
			 }
			 
		}
		LoadAll();
	}
	public void InsertIntoArray(){
		if(this.BrinPages.isEmpty() || this.check()){
			FirstBrintuples = new LinkedList<Entity>();
			
		}
	}
	public boolean check(){
	       return this.currentLine>10;
	    }
	public void loadFirst(int Index, String columnName) {

		try {
			FileWriter writer = new FileWriter(columnName + Index +"FirstBrin"+ ".csv");

			for (int i = 0; i < FirstBrintuples.size(); i++) {

				writer.append(FirstBrintuples.get(i).Value + " ");
				writer.append("\n");

				// System.out.println(Densetuples.get(i).Value);
				// generate whatever data you want

			}
			writer.flush();
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}
	public void LoadAll(){
		for(int i=0;i< FirstBrintuples.size();i++){
			//System.out.println("Entered to load");
			loadFirst(i, ColumnName);
		}
	}

}
