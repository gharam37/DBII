import java.io.FileOutputStream;
import java.io.Serializable;
import java.util.Hashtable;


public class Table implements Serializable  {
	//should implement serializable 
	//should have an attribute arraylist of pages , a hashtable for type , a string for name 
    
	///should have an insert method called by DbApp .. it called an insert method in Page
	
	//should implement serializable 
	//should have an attribute arraylist of pages , a hashtable for type , a string for name 
    ///should have an insert method called by DbApp .. it called an insert method in Page
	
	String strClusteringKeyColumn; //table primary key
	String strTableName; //table name
	
	Hashtable<String,String> htblColNameType; // hashtable of the attributes and their types.. to put inserted in a metadata file
	public Table(String strTableName,
			String strClusteringKeyColumn, 
			Hashtable<String,String> htblColNameType){ //to do the exception 
		
		
		MakeMeta(htblColNameType);
		
	}
	
	public void MakeMeta( Hashtable<String,String> htblColNameTypehtblColNameType){
		ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(
		new File(strTableName + ".ser")));
		oos.writeObject(t);
		oos.close();
		createIndex(strTableName, strKeyColName);
		try {
			FileWriter writer = new FileWriter("metadata.csv");

			Set<Entry<String, String>> set1 = htblColNameType.entrySet();
			Iterator<Entry<String, String>> iterator1 = set1.iterator();
			while (iterator1.hasNext()) {
				Entry<String, String> en = iterator1.next();
				writer.append(strTableName);
				writer.append(en.getKey());
				writer.append(en.getValue());
				if (strKeyColName.equals(en.getKey())) {
					writer.append("True");
				} else {
					writer.append("False");
				}
				writer.append("False");
				if (htblColNameRefs.contains(en.getKey())) {
					writer.append(htblColNameRefs.get(en.getKey()));
				} else {
					writer.append("null");
				}
				writer.append("\n");
			}

			// generate whatever data you want

			writer.flush();
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

		
		
	}
}
